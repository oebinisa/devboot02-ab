name: CI Pipeline for Python App

on:
  push:
    branches:
      - ci-actions-mysql
  pull_request:
    branches:
      - ci-actions-mysql

jobs:
  setup:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: address_book
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
    steps:
      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h127.0.0.1 --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 2
          done
  
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
          uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Install virtual environment 
      - name: Install venv tools
        run: sudo apt-get install -y python3-venv

      - name: Clean workspace
        run: rm -rf

      # Step 4: Set up virtual environment
      - name: Set up virtual environment and install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      # Step 5: Run tests
      - name: Run tests
        run: |
          source venv/bin/activate
          pytest

      # Step 6: Package the app as a zip file
      - name: Create artifact
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          zip -r address-book-python-$timestamp.zip .
        env:
          TIMESTAMP: ${{ github.run_id }}

      - name: Verify artifact
        run: ls -la address-book-python-*.zip

      # Step 7: Upload zipped artifact to S3
      - name: Upload artifact to S3
        run: aws s3 cp address-book-python-${{ env.TIMESTAMP }}.zip s3://simartefacts/
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: us-east-1

      # Step 8: Send email notification
      - name: Send email notification
        run: |
          curl -s --user "api:${{ secrets.MAILGUN_API_KEY }}" \
          https://api.mailgun.net/v3/devforge.cc/messages \
          -F from="CI Pipeline <mailgun@devforge.cc>" \
          -F to="o.oluwapelumi@gmail.com" \
          -F to="faithskool4u@gmail.com" \
          -F subject="CI Pipeline Status: Success" \
          -F text="The build artifact has been successfully created and uploaded to S3." \
          -w "\nHTTP Status Code: %{http_code}\n"
